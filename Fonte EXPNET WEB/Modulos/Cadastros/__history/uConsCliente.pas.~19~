unit uConsCliente;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics,
  Controls, Forms, uniGUITypes, uniGUIAbstractClasses,
  uniGUIClasses, uniGUIForm, uniGUIFrame, Frame.ConsCliente, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  uniBitBtn, Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client, uniToolBar,
  uniBasicGrid, uniDBGrid, uniSplitter, uniMultiItem, uniComboBox,
  uniDBComboBox, uniDateTimePicker, uniDBDateTimePicker, uniMemo, uniDBMemo,
  uniEdit, uniDBEdit, uniLabel, uniScrollBox, uniPageControl, uniButton,
  uniPanel, uniGUIBaseClasses, ACBrIBGE, ACBrBase, ACBrSocket, ACBrCEP;

type
  TfrmConsCliente = class(TUniForm)
    FrameConsCliente: TFrameConsCliente;
    procedure UniFormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnCancelarClick(Sender: TObject);
    procedure BtnEditaClick(Sender: TObject);
    procedure btnNovoClick(Sender: TObject);
    procedure FrameConsClienteACBrCEP1BuscaEfetuada(Sender: TObject);
    procedure FrameConsClienteReady(Sender: TObject);


  private
    { Private declarations }
  public
    { Public declarations }



  end;

function frmConsCliente: TfrmConsCliente;

implementation

{$R *.dfm}

uses
  MainModule, uniGUIApplication, ServerModule;

function frmConsCliente: TfrmConsCliente;
begin
  Result := TfrmConsCliente(UniMainModule.GetFormInstance(TfrmConsCliente));
end;



procedure TfrmConsCliente.btnCancelarClick(Sender: TObject);
begin
uniDM.qryCliente.close;
uniDM.qryEndAdicionais.close;
FrameConsCliente.CadHideDetalhe;
end;

procedure TfrmConsCliente.BtnEditaClick(Sender: TObject);
begin
uniDM.qryCliente.Append;
 FrameConsCliente.CadShowDetalhe;
end;

procedure TfrmConsCliente.btnNovoClick(Sender: TObject);
begin
uniDM.qryCliente.Append;
end;

procedure TfrmConsCliente.FrameConsClienteACBrCEP1BuscaEfetuada(
  Sender: TObject);
var
  I : Integer ;
begin
  if FrameConsCliente.ACBrCEP1.Enderecos.Count < 1 then
     ShowMessage( 'Nenhum Endereço encontrado' )
  else
   begin
     //Memo1.Lines.Add( IntToStr(ACBrCEP1.Enderecos.Count) + ' Endereço(s) encontrado(s)');
     //Memo1.Lines.Add('');

     For I := 0 to FrameConsCliente.ACBrCEP1.Enderecos.Count-1 do
     begin
       with FrameConsCliente.ACBrCEP1.Enderecos[I] do
       begin
          FrameConsCliente.EdtCEP.Text    := CEP;
          FrameConsCliente.EdtEnd.Text    := Tipo_Logradouro+ ' ' +Logradouro;
          FrameConsCliente.EdtComp.Text   := Complemento;
          FrameConsCliente.Edtbairro.Text := Bairro;
          //EdtCidade('Municipio: '+Municipio + ' - IBGE: '+IBGE_Municipio);
          FrameConsCliente.EdtCidade.Text := Municipio;
          FrameConsCliente.EdtEstado.Text := UF;
          //Memo1.Lines.Add('UF: '+UF + ' - IBGE: '+IBGE_UF);
         // Memo1.Lines.Add( StringOfChar('-',20) );
       end ;
     end ;
   end ;
end;

procedure TfrmConsCliente.FrameConsClienteReady(Sender: TObject);
begin
  FrameConsCliente.UniFrameReady(Sender);
end;

procedure TfrmConsCliente.UniFormClose(Sender: TObject;
  var Action: TCloseAction);
begin
if uniDM.qryCliente.State in [dsInsert, dsEdit] then
    begin
          //MessageBox(0,'É necessário salvar ou cancelar as alterações de sair','Atenção',64);
uniDM.qryCliente.Cancel;
uniDM.qryEndAdicionais.Cancel;

    end;
end;

end.
